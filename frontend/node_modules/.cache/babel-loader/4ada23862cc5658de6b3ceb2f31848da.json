{"ast":null,"code":"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    console.log(\"action data\", data);\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst update = ({\n  userId,\n  name,\n  email,\n  password\n}) => async (dispatch, getState) => {\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n  dispatch({\n    type: USER_UPDATE_REQUEST,\n    payload: {\n      userId,\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.put(\"/api/users/\" + userId, {\n      name,\n      email,\n      password\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    console.log(\"action data\", data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log('errror', error.message);\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst logout = () => async dispatch => {\n  Cookie.remove('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\nexport { signin, register, logout, update };","map":{"version":3,"sources":["/Users/leifu/Documents/amazona-Video-05-Sidebar/frontend/src/actions/userActions.js"],"names":["Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGOUT","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","signin","email","password","dispatch","type","payload","data","post","console","log","set","JSON","stringify","error","message","update","userId","name","getState","userSignin","userInfo","put","headers","Authorization","token","register","logout","remove"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,gBAAnD,EAAqEC,qBAArE,EAA4FC,qBAA5F,EAAmHC,kBAAnH,EAAuIC,WAAvI,EAAoJC,mBAApJ,EAAyKC,mBAAzK,EAA8LC,gBAA9L,QAAsN,4BAAtN;;AACA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAkB;AAClDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEd,mBAAP;AAA4Be,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAArC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMlB,KAAK,CAACmB,IAAN,CAAW,mBAAX,EAAgC;AAACN,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAhC,CAArB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,IAA3B;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEb,mBAAP;AAA4Bc,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR;AACAjB,IAAAA,MAAM,CAACqB,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAvB;AACH,GALD,CAKE,OAAOO,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEZ,gBAAP;AAAyBa,MAAAA,OAAO,EAAEQ,KAAK,CAACC;AAAxC,KAAD,CAAR;AACH;AACJ,CAVD;;AAYA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,IAAT;AAAehB,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAAqC,OAAOC,QAAP,EAAiBe,QAAjB,KAA8B;AAC9E,QAAM;AAACC,IAAAA,UAAU,EAAG;AAACC,MAAAA;AAAD;AAAd,MAA4BF,QAAQ,EAA1C;AACAf,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP,mBAAP;AAA4BQ,IAAAA,OAAO,EAAE;AAACW,MAAAA,MAAD;AAASC,MAAAA,IAAT;AAAehB,MAAAA,KAAf;AAAsBC,MAAAA;AAAtB;AAArC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMlB,KAAK,CAACiC,GAAN,CAAU,gBAAgBL,MAA1B,EACrB;AAACC,MAAAA,IAAD;AAAOhB,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KADqB,EACI;AACrBoB,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE,YAAaH,QAAQ,CAACI;AADhC;AADY,KADJ,CAArB;AAMArB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,mBAAP;AAA4BO,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR;AACAjB,IAAAA,MAAM,CAACqB,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAvB;AACH,GATD,CASE,OAAOO,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,gBAAP;AAAyBM,MAAAA,OAAO,EAAEQ,KAAK,CAACC;AAAxC,KAAD,CAAR;AACH;AACJ,CAfD;;AAgBA,MAAMW,QAAQ,GAAG,CAACR,IAAD,EAAOhB,KAAP,EAAcC,QAAd,KAA2B,MAAMC,QAAN,IAAkB;AAC1DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEX,qBAAP;AAA8BY,IAAAA,OAAO,EAAE;AAACY,MAAAA,IAAD;AAAOhB,MAAAA,KAAP;AAAcC,MAAAA;AAAd;AAAvC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMlB,KAAK,CAACmB,IAAN,CAAW,qBAAX,EAAkC;AAACU,MAAAA,IAAD;AAAMhB,MAAAA,KAAN;AAAaC,MAAAA;AAAb,KAAlC,CAArB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,IAA3B;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEV,qBAAP;AAA8BW,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACH,GAJD,CAIE,OAAOO,KAAP,EAAc;AACZL,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,KAAK,CAACC,OAA5B;AACAX,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,kBAAP;AAA2BU,MAAAA,OAAO,EAAEQ,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAVD;;AAWA,MAAMY,MAAM,GAAG,MAAM,MAAMvB,QAAN,IAAkB;AACnCd,EAAAA,MAAM,CAACsC,MAAP,CAAc,UAAd;AACAxB,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAER;AAAP,GAAD,CAAR;AACH,CAHD;;AAIA,SAAQI,MAAR,EAAgByB,QAAhB,EAAyBC,MAAzB,EAAiCX,MAAjC","sourcesContent":["import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\";\nconst signin = (email, password) => async dispatch => {\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\n    try{\n        const {data} = await Axios.post(\"/api/users/signin\", {email, password})\n        console.log(\"action data\", data);\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        Cookie.set('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.message});\n    }\n}\n\nconst update = ({userId, name, email, password}) => async (dispatch, getState) => {\n    const {userSignin : {userInfo}} = getState();\n    dispatch({type: USER_UPDATE_REQUEST, payload: {userId, name, email, password}});\n    try{\n        const {data} = await Axios.put(\"/api/users/\" + userId, \n        {name, email, password}, {\n            headers: {\n                Authorization: 'Bearer ' +  userInfo.token\n            }\n        })\n        dispatch({type: USER_UPDATE_SUCCESS, payload: data});\n        Cookie.set('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({type: USER_UPDATE_FAIL, payload: error.message});\n    }\n}\nconst register = (name, email, password) => async dispatch => {\n    dispatch({type: USER_REGISTER_REQUEST, payload: {name, email, password}});\n    try{\n        const {data} = await Axios.post(\"/api/users/register\", {name,email, password})\n        console.log(\"action data\", data);\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\n    } catch (error) {\n        console.log('errror', error.message);\n        dispatch({type: USER_REGISTER_FAIL, payload: error.message});\n    }\n}\nconst logout = () => async dispatch => {\n    Cookie.remove('userInfo');\n    dispatch({type: USER_LOGOUT});\n}\nexport {signin, register,logout, update};"]},"metadata":{},"sourceType":"module"}